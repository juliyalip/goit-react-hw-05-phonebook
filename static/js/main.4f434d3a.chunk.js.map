{"version":3,"sources":["component/form.module.css","component/Contacts.js","component/Filter.js","component/Form.js","App.js","index.js"],"names":["module","exports","Contacts","persons","onDelete","TransitionGroup","component","map","id","name","number","CSSTransition","timeout","classNames","className","type","onClick","Filter","value","onChange","placeholder","Form","state","handleChange","e","currentTarget","setState","handleFormSubmit","preventDefault","onAdd","props","validateForm","shortid","generate","reset","onCheckUnigue","alert","this","onSubmit","s","form","input","Component","App","contacts","filter","handleAddContact","newContact","handleCheckUnicue","duplicete","find","contact","toast","error","hangleDelete","contactId","prevState","changleFilter","localStorage","getItem","parsedContacts","JSON","parse","console","log","prevProps","setItem","stringify","normalizeFilter","toLowerCase","visibleContacts","includes","in","appear","unmountOnExit","length","autoClose","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f434d3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1N3uQ\",\"input\":\"form_input__2AyYK\"};","import PropTypes from \"prop-types\";\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nimport  \"./contact.css\";\r\n\r\n\r\n\r\nconst Contacts = ({ persons, onDelete }) => (\r\n  <TransitionGroup component=\"ul\">\r\n     \r\n    {persons.map(({ id, name, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames=\"contactItem\">\r\n        \r\n       <li  className=\"contactItem\" id={id}>\r\n        <p>\r\n          {name} {number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            onDelete(id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n        </li>\r\n        </CSSTransition>\r\n   \r\n    ))}\r\n\r\n </TransitionGroup>\r\n\r\n);\r\n\r\nContacts.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"find name\"\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./form.module.css\";\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    \r\n  };\r\n\r\n  static propTypes = {\r\n    handleChange: PropTypes.func,\r\n    handleFormSubmit: PropTypes.func,\r\n    validateForm: PropTypes.func,\r\n    reset: PropTypes.func,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n    const isValedeForm = this.validateForm();\r\n    if (!isValedeForm) return;\r\n    onAdd({ id: shortid.generate(), name, number });\r\n    this.reset();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckUnigue } = this.props;\r\n\r\n    if (!name || !number) {\r\n      alert(\"filed is empti\");\r\n      return false;\r\n    }\r\n    return onCheckUnigue(name);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n  \r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={s.form}>\r\n        <label className={s.input}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.input}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}","import { Component } from \"react\";\nimport \"./index.css\";\nimport Contacts from \"./component/Contacts\";\nimport Filter from \"./component/Filter\";\nimport Form from \"./component/Form\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './component/contact.css'\n\n\n\n\nimport {CSSTransition} from 'react-transition-group'\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n    console.log(\"component App DidMount\");\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"app componentDidUpdate\");\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"obnovilos pole contact\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContact = (newContact) => {\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n  };\n\n  handleCheckUnicue = (name) => {\n    const { contacts } = this.state;\n    const duplicete = !!contacts.find((contact) => contact.name === name);\n    duplicete && toast.error('contact already  exists')\n\n    return !duplicete;\n  };\n\n\n\n  hangleDelete = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changleFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n\n    return (\n      <>\n        <div className=\"container\">\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title\"\n          unmountOnExit\n        >\n          <h1 className=\"title\">Phonebook</h1>\n        </CSSTransition>\n        \n\n       \n\n     \n        \n          <Form\n            onAdd={this.handleAddContact}\n            onCheckUnigue={this.handleCheckUnicue}\n          />\n\n          <h2>Contacts</h2>\n\n          <CSSTransition in={this.state.contacts.length > 0 } classNames=\"contactItem\" timeout={250} unmountOnExit>\n                <>\n            <Filter value={this.state.filter} onChange={this.changleFilter} />\n            \n              <Contacts persons={visibleContacts} onDelete={this.hangleDelete} />\n                    \n          </>\n          \n        </CSSTransition>\n       \n          \n      \n          <ToastContainer autoClose={250} position=\"top-left\"/> \n         \n        </div>\n      </>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}